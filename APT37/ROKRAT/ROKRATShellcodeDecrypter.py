# Script decrypt encrypted shellcode used within ROKRAT
# Typically ROKRAT will decode the shellcode pulled from cloud by taking the first byte of the payload as a key, and XORing it with the remainder of the payload
# @0v1@infosec.exchange
# 0x0v1.com

import ctypes

# Function to perform XOR decoding on the data
def xor_decode(data, key):
    return bytes(d ^ key for d in data)

def main(file_path):
    try:
        with open(file_path, "rb") as file:
            data = file.read()

            # XOR decoding with the key (first byte of the data)
            decoded_data = xor_decode(data[1:], data[0])

            # Save the decoded data to a new file in the current directory
            output_file_path = "decoded_payload.bin"
            with open(output_file_path, "wb") as output_file:
                output_file.write(decoded_data)

            print(f"Decoded payload saved to: {output_file_path}")

    except Exception as e:
        print(f"An error occurred: {str(e)}")

if __name__ == "__main__":
    file_path = input("Enter the path to the input file: ")
    main(file_path)
